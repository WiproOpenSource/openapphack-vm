---
# `vagrant_box` .

vagrant_box: virtualenv/ubuntu1404
#
vagrant_user: vagrant

# If you need to run multiple instances of openapphack VM, set a unique hostname,
# machine name, and IP address for each instance.
vagrant_hostname: openapphackvm.dev
vagrant_machine_name: openapphackvm
#vagrant_ip: 192.168.88.88
vagrant_ip: 0.0.0.0

# Allow openapphackvm VM to be accessed via a public network interface on your host.
# Vagrant boxes are insecure by default, so be careful. You've been warned!
# See: https://docs.vagrantup.com/v2/networking/public_network.html
vagrant_public_ip: ""

# A list of synced folders, with the keys 'local_path', 'destination', 'id', and
# a 'type' of [nfs|rsync|smb] (leave empty for slow native shares).

vagrant_synced_folders:
  # The first synced folder will be used for the default App installation,
  - local_path: ~/Sites/openapphackvm
    destination: /var/www/openapphackvm
    type: nfs
    create: true

# Memory and CPU to use for this VM.
vagrant_memory: 1024
vagrant_cpus: 2

# The web server software to use. Can be either 'apache' or 'nginx'.
openapphackvm_webserver: apache


# Settings for your openhack app
app_path: "/var/www/openapphackvm/openapphack"
app_domain: "openapphackvm.dev"
mysql_user: appuser
mysql_password: openapphack
mysql_database: openapphackdb


# set to false if you do not want to generate the app using generateapp instructions
generate_app: true
#The path to the generator ,will be picked up from an ansible role of the generator
#generator_path: ""

#The type of generator for now it is yo, more generators to be added later
#generator_type: "yo"

#The argumentst to generator
# e.g generator_arguments: "" for yo
# e.g generator_arguments: "-v -y" for drush make
#generator_arguments: ""

#set to false if you don't want to install the app using install instructions
install_app: true

# app runner used to install and run the app
#app_runner: node

# arguments to be passed to app
#app_arguments:

# set to false if you don't want to run the app
run_app: true

# Cron jobs are added to the root user's crontab. Keys include name (required),
# minute, hour, day, weekday, month, job (required), and state.
openapphackvm_cron_jobs: []
  # - {
  #   name: "openapphack Cron",
  #   minute: "*/30",
  #   job: " add some shell command here "
  # }


# Apache VirtualHosts. Add one for each site you are running inside the VM. For
# multisite deployments, you can point multiple servernames at one documentroot.
# View the virtualenv.apache Ansible Role README for more options.
apache_vhosts:
  - servername: "{{ app_domain }}"
    documentroot: "{{ app_path }}"



apache_remove_default_vhost: true
apache_mods_enabled:
  - expires.load
  - ssl.load
  - rewrite.load

# Nginx hosts. Each site will get a server entry using the configuration defined
# here.
nginx_hosts:
  - server_name: "{{ app_domain }}"
    root: "{{ app_path }}"



nginx_remove_default_vhost: true

# MySQL Databases and users. .
mysql_databases:
  - name: "{{ mysql_database }}"
    encoding: utf8
    collation: utf8_general_ci

mysql_users:
  - name: "{{ mysql_user }}"
    host: "%"
    password: "{{ mysql_password }}"
    priv: "{{ mysql_database }}.*:ALL"

# Comment out any extra utilities you don't want to install. If you don't want
# to install *any* extras, make set this value to an empty set, e.g. `[]`.
installed_extras:
  - nodejs
  # - ruby
  # - selenium
  # - solr


# Add any extra apt or yum packages you would like installed.
extra_packages:
  - unzip

# `nodejs` must be in installed_extras for this to work.
nodejs_version: "4.3"
#nodejs_npm_global_packages: []
nodejs_npm_global_packages: 
  - name: yo
  - name: bower
  - name: grunt-cli
  - name: generator-express-simple

# `ruby` must be in installed_extras for this to work.
ruby_install_gems: []

# You can configure almost anything else on the server in the rest of this file.
extra_security_enabled: false


firewall_allowed_tcp_ports:
  - "22"
  - "25"
  - "80"
  - "81"
  - "443"
  - "4444"
  - "8025"
  - "8080"
  - "8443"
  - "8983"
  - "4200"

firewall_log_dropped_packets: false


# MySQL Configuration.
mysql_root_password: root
mysql_slow_query_log_enabled: true
mysql_slow_query_time: 2
mysql_wait_timeout: 300



# Other configuration.
known_hosts_path: ~/.ssh/known_hosts
